{"version":3,"file":"static/js/490.48314435.chunk.js","mappings":"iKAGA,MAmBA,EAnBoBA,IAA0B,IAAzB,MAAEC,KAAUC,GAAOF,EACtC,MAAOG,EAAOC,IAAQC,EAAAA,EAAAA,IAASH,GAC/B,OACEI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,SACEC,WAAWC,EAAAA,EAAAA,IACT,mWAEER,KACAD,EACJU,OAAO,SACPC,UAAQ,EACRC,WAAS,IAEVV,EAAKW,SAAWX,EAAKY,QAASP,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOF,SAAEJ,EAAKY,UAC3D,E,aChBP,MAEaC,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,UAAWF,EAAAA,KAERG,IAAI,EAAG,sCACPR,SAAS,YACZS,SAAUJ,EAAAA,KAEPG,IAAI,EAAG,sCACPR,SAAS,YACZU,MAAOL,EAAAA,KAAaK,MAAM,8BAA8BV,SAAS,YACjEW,SAAUN,EAAAA,KAEPG,IAAI,GACJI,QAfiB,wCAeM,CAAEC,QAAS,sCAClCb,SAAS,YACZc,gBAAiBT,EAAAA,KAEdU,MAAM,CAACV,EAAAA,GAAQ,YAAa,MAAO,wBACnCL,SAAS,c,kCCdd,MAgGA,EAhGiBb,IAAe,IAAd,KAAE6B,GAAM7B,EACxB,MAAM8B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,OACE3B,EAAAA,EAAAA,MAAA,OAAKI,UAAU,4DAA2DF,SAAA,EACxEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAOF,SAAW,UAATqB,EAAmB,SAAW,WAC3C,aAATA,IACCpB,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CACLC,cAAe,CACbf,UAAW,GACXE,SAAU,GACVC,MAAO,GACPC,SAAU,GACVG,gBAAiB,IAEnBS,iBAAkBnB,EAClBoB,SAAUC,MAAOC,EAAQC,KACvB,UACQV,GAASW,EAAAA,EAAAA,IAAYF,IAASG,SACpCV,EAAS,SACX,CAAE,MAAOhB,GACP2B,QAAQC,IAAI5B,EACd,GACAR,SAEAN,IACAI,EAAAA,EAAAA,MAACuC,EAAAA,GAAI,CAACnC,UAAU,yCAAwCF,SAAA,EACtDC,EAAAA,EAAAA,KAACqC,EAAW,CACVC,KAAK,YACLlB,KAAK,OACLmB,YAAY,gBAEdvC,EAAAA,EAAAA,KAACqC,EAAW,CACVC,KAAK,WACLlB,KAAK,OACLmB,YAAY,eAEdvC,EAAAA,EAAAA,KAACqC,EAAW,CAACC,KAAK,QAAQlB,KAAK,QAAQmB,YAAY,WACnDvC,EAAAA,EAAAA,KAACqC,EAAW,CACVC,KAAK,WACLlB,KAAK,WACLmB,YAAY,cAEdvC,EAAAA,EAAAA,KAACqC,EAAW,CACVC,KAAK,kBACLlB,KAAK,WACLmB,YAAY,sBAEdvC,EAAAA,EAAAA,KAAA,UACEoB,KAAK,SACLnB,UAAU,wEAAuEF,SAClF,iBAQC,UAATqB,IACCpB,EAAAA,EAAAA,KAACyB,EAAAA,GAAM,CACLC,cAAe,CACbZ,MAAO,GACPC,SAAU,IAEZa,SAAUC,MAAOC,EAAQC,KACvB,UACQV,GAASmB,EAAAA,EAAAA,IAASV,IAASG,SACjCV,EAAS,IACX,CAAE,MAAOhB,GACP2B,QAAQC,IAAI5B,EACd,GACAR,SAEAN,IACAI,EAAAA,EAAAA,MAACuC,EAAAA,GAAI,CAACnC,UAAU,yCAAwCF,SAAA,EACtDC,EAAAA,EAAAA,KAACqC,EAAW,CAACC,KAAK,QAAQlB,KAAK,QAAQmB,YAAY,WACnDvC,EAAAA,EAAAA,KAACqC,EAAW,CACVC,KAAK,WACLlB,KAAK,WACLmB,YAAY,cAEdvC,EAAAA,EAAAA,KAAA,UACAoB,KAAK,SACLnB,UAAU,wEAAuEF,SAClF,mBAOH,C,2DCjGH,SAASG,IAAe,IAAD,IAAAuC,EAAAC,UAAAC,OAARC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAC1B,OAAOC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,GAAKJ,GACtB,C,8ECFA,MAQA,EARiBK,KAEbjD,EAAAA,EAAAA,KAAAF,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CAAC9B,KAAK,c","sources":["components/forms/CustomField.jsx","validation/RegisterSchema.js","components/forms/AuthForm.jsx","lib/utils.js","pages/Register.jsx"],"sourcesContent":["import { useField } from \"formik\";\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst CustomField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <>\r\n      <input\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\r\n        )}\r\n        {...field}\r\n        {...props}\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n      />\r\n      {meta.touched && meta.error && <div className=\"error\">{meta.error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomField;\r\n","import * as yup from \"yup\";\r\n\r\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\r\n\r\nexport const registerSchema = yup.object().shape({\r\n  firstName: yup\r\n    .string()\r\n    .min(4, \"Please enter at least 4 characters\")\r\n    .required(\"Required\"),\r\n  lastName: yup\r\n    .string()\r\n    .min(4, \"Please enter at least 4 characters\")\r\n    .required(\"Required\"),\r\n  email: yup.string().email(\"Please enter a valid email\").required(\"Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(5)\r\n    .matches(passwordRules, { message: \"Please create a stronger password\" })\r\n    .required(\"Required\"),\r\n  confirmpassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n    .required(\"Required\"),\r\n});\r\n","import React, { useState } from \"react\";\r\nimport CustomField from \"./CustomField\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { registerSchema } from \"../../validation/RegisterSchema\";\r\nimport { actRegister, actLogin } from \"../../store/auth/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AuthForm = ({ type }) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className=\" flex flex-col gap-4 justify-center items-center h-[75vh]\">\r\n      <h2 className=\"mb-16\">{type === \"login\" ? \"SignIn\" : \"SignUp\"}</h2>\r\n      {type === \"register\" && (\r\n        <Formik\r\n          initialValues={{\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmpassword: \"\",\r\n          }}\r\n          validationSchema={registerSchema}\r\n          onSubmit={async (values, actions) => {\r\n            try {\r\n              await dispatch(actRegister(values)).unwrap();\r\n              navigate(\"/login\");\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <Form className=\"w-full lg:w-[40%] flex flex-col gap-8 \">\r\n              <CustomField\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n              />\r\n              <CustomField\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                placeholder=\"Last Name\"\r\n              />\r\n              <CustomField name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n              <CustomField\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <CustomField\r\n                name=\"confirmpassword\"\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-red-800 py-3 w-full self-center rounded-lg text-slate-50 font-bold\"\r\n              >\r\n                Sign Up\r\n              </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      )}\r\n\r\n      {type === \"login\" && (\r\n        <Formik\r\n          initialValues={{\r\n            email: \"\",\r\n            password: \"\",\r\n          }}\r\n          onSubmit={async (values, actions) => {\r\n            try {\r\n              await dispatch(actLogin(values)).unwrap();\r\n              navigate(\"/\");\r\n            } catch (error) {\r\n              console.log(error);\r\n            }\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <Form className=\"w-full lg:w-[40%] flex flex-col gap-8 \">\r\n              <CustomField name=\"email\" type=\"email\" placeholder=\"Email\" />\r\n              <CustomField\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n              <button\r\n              type=\"submit\"\r\n              className=\"bg-red-800 py-3 w-full self-center rounded-lg text-slate-50 font-bold\"\r\n            >\r\n              Sign In\r\n            </button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import clsx from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import React from \"react\";\r\nimport AuthForm from \"../components/forms/AuthForm\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <>\r\n      <AuthForm type=\"register\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["_ref","label","props","field","meta","useField","_jsxs","_Fragment","children","_jsx","className","cn","margin","required","fullWidth","touched","error","registerSchema","yup","shape","firstName","min","lastName","email","password","matches","message","confirmpassword","oneOf","type","dispatch","useDispatch","navigate","useNavigate","Formik","initialValues","validationSchema","onSubmit","async","values","actions","actRegister","unwrap","console","log","Form","CustomField","name","placeholder","actLogin","_len","arguments","length","inputs","Array","_key","twMerge","clsx","Register","AuthForm"],"sourceRoot":""}