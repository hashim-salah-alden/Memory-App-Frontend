{"version":3,"file":"static/js/100.feb8b905.chunk.js","mappings":"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","sources":["hooks/useGetUser.js","lib/utils.js","hooks/useMemories.js","components/feedback/Loading.jsx","components/ui/Card.jsx","components/ui/Button.jsx","components/MemoryCard.jsx","components/ui/CustomeInput.jsx","components/forms/AddMemory.jsx","components/ui/Dialog.jsx","pages/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst GetUser = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\r\n  const token = localStorage.getItem(\"token\");\r\n  const navigate = useNavigate();\r\n\r\n  const logOut = () => {\r\n    localStorage.clear();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) {\r\n        logOut();\r\n      }\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"user\")));\r\n  }, [setUser]);\r\n\r\n  return { user, setUser, logOut };\r\n};\r\n\r\nexport default GetUser;\r\n","import clsx from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs) {\n  return twMerge(clsx(inputs));\n}\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actGetMemories, cleanMemories } from \"../store/memories/memoriesSlice\";\r\n\r\nconst useMemories = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const promise = dispatch(actGetMemories());\r\n    return () => {\r\n      dispatch(cleanMemories());\r\n      promise.abort();\r\n    };\r\n  }, [dispatch]);\r\n  const { memories, loading, error } = useSelector((state) => state.memories);\r\n\r\n  return { memories, loading, error };\r\n};\r\n\r\nexport default useMemories;\r\n","import React from \"react\";\r\n// import loading skeleton\r\n// import lottie animation\r\n\r\nconst Loading = ({ status, error, children }) => {\r\n  if (status === \"pending\") {\r\n    return <div>Loading....</div>;\r\n  }\r\n\r\n  if (status === \"failed\") {\r\n    return <div> {error}</div>;\r\n  }\r\n\r\n  return <div>{children}</div>;\r\n};\r\n\r\nexport default Loading;\r\n","import * as React from \"react\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst Card = React.forwardRef(function Card({ className, ...props }, ref) {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nCard.displayName = \"Card\";\r\n\r\nconst CardHeader = React.forwardRef(function CardHeader(\r\n  { className, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nCardHeader.displayName = \"CardHeader\";\r\n\r\nconst CardTitle = React.forwardRef(function CardTitle(\r\n  { className, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <h3\r\n      ref={ref}\r\n      className={cn(\r\n        \"text-2xl font-semibold leading-none tracking-tight\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nCardTitle.displayName = \"CardTitle\";\r\n\r\nconst CardDescription = React.forwardRef(function CardDescription(\r\n  { className, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      className={cn(\"text-sm text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nCardDescription.displayName = \"CardDescription\";\r\n\r\nconst CardContent = React.forwardRef(function CardContent(\r\n  { className, ...props },\r\n  ref\r\n) {\r\n  return <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />;\r\n});\r\nCardContent.displayName = \"CardContent\";\r\n\r\nconst CardFooter = React.forwardRef(function CardFooter(\r\n  { className, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\"flex items-center p-6 pt-0\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nCardFooter.displayName = \"CardFooter\";\r\n\r\nexport {\r\n  Card,\r\n  CardHeader,\r\n  CardFooter,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardContent,\r\n};\r\n","import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nconst Button = React.forwardRef((props, ref) => {\r\n  const { className, variant, size, asChild = false, ...restProps } = props;\r\n  const Comp = asChild ? Slot : \"button\";\r\n  return (\r\n    <Comp\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      ref={ref}\r\n      {...restProps}\r\n    />\r\n  );\r\n});\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n","import React, { useEffect } from \"react\";\r\nimport useGetUser from \"../hooks/useGetUser\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"./ui/Card\";\r\nimport { Button } from \"./ui/Button\";\r\nimport { actDeleteMemory } from \"../store/memories/memoriesSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MdDelete } from \"react-icons/md\";\r\n\r\nconst MemoryCard = ({ memory, setCurrentId }) => {\r\n  const { user, setUser } = useGetUser();\r\n\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Card className=\"w-full md:w-5/12 lg:w-1/4 flex flex-col justify-between shadow-xl rounded-lg\">\r\n      <CardHeader className=\"w-full p-0 mb-8\">\r\n        <img\r\n          className=\"h-44 rounded-lg\"\r\n          src={memory.image}\r\n          alt=\"\"\r\n        />\r\n      </CardHeader>\r\n      <CardContent>\r\n        <CardTitle>{memory.title}</CardTitle>\r\n        <CardDescription>User Name</CardDescription>\r\n        <p>{memory.message}</p>\r\n      </CardContent>\r\n      <CardFooter className=\"flex justify-between \">\r\n        <Button\r\n          onClick={() => {\r\n            setCurrentId(memory._id);\r\n          }}\r\n          className=\"w-1/3 flex justify-between items-center\"\r\n          disabled={user ? (user._id === memory.creator ? false : true) : true}\r\n        >\r\n          Edit <MdDelete />\r\n        </Button>\r\n        <Button\r\n          className=\"w-1/3 flex justify-between items-center\"\r\n          variant=\"destructive\"\r\n          onClick={() => dispatch(actDeleteMemory(memory._id))}\r\n          disabled={user ? (user._id === memory?.creator ? false : true) : true}\r\n        >\r\n          Delete <MdDelete />\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MemoryCard;\r\n","import * as React from \"react\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const { type, name, placeholder, className, handleChange, value } = props;\r\n  return (\r\n    <input\r\n      type={type}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      onChange={(e) => handleChange(e)}\r\n      value={value}\r\n    />\r\n  );\r\n});\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input };\r\n\r\nconst Textarea = React.forwardRef((props, ref) => {\r\n  const { className, ...restProps } = props;\r\n\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...restProps}\r\n    />\r\n  );\r\n});\r\nTextarea.displayName = \"Textarea\";\r\n\r\nexport { Textarea };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Input } from \"../ui/CustomeInput\";\r\nimport { Textarea } from \"../ui/CustomeInput\";\r\nimport { Button } from \"../ui/Button\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  actAddMemorie,\r\n  actUpdateMemory,\r\n} from \"../../store/memories/memoriesSlice\";\r\n\r\nconst AddMemory = ({ currentId, setCurrentId, memories }) => {\r\n  const dispatch = useDispatch();\r\n  const [memoryData, setMemoryData] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: [],\r\n    creator: \"\",\r\n    image: \"\",\r\n  });\r\n  const memory = currentId\r\n    ? memories.find((memory) => memory._id === currentId)\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    if (memory) setMemoryData(memory);\r\n  }, [currentId, memory]);\r\n\r\n  const handleChange = (e) => {\r\n    setMemoryData({ ...memoryData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleChangeImage = (e) => {\r\n    setMemoryData({ ...memoryData, [e.target.name]: e.target.files[0] });\r\n  };\r\n\r\n  const clear = (e) => {\r\n    e.preventDefault();\r\n    setCurrentId(0);\r\n    setMemoryData({\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: [],\r\n      image: \"\",\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    const formData = new FormData();\r\n    Object.keys(memoryData).map((key) => formData.append(key, memoryData[key]));\r\n    e.preventDefault();\r\n    if (currentId === 0) {\r\n      dispatch(actAddMemorie(formData)); //memoryData\r\n      clear(e);\r\n    } else {\r\n      console.log(memoryData);\r\n      dispatch(actUpdateMemory(memoryData)); //memoryData\r\n      clear(e);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <h2 className=\"text-center my-4 font-bold text-lg\">Create a Memory</h2>\r\n\r\n      <form\r\n        className=\"flex flex-col gap-4 w-72\"\r\n        method=\"POST\"\r\n        onSubmit={(e) => handleSubmit(e)}\r\n        enctype=\"multipart/form-data\"\r\n        action=\"/register\"\r\n      >\r\n        <Input\r\n          handleChange={handleChange}\r\n          placeholder=\"Title\"\r\n          name=\"title\"\r\n          value={memoryData?.title}\r\n        />\r\n\r\n        <Textarea\r\n          onChange={(e) => handleChange(e)}\r\n          placeholder=\"Message\"\r\n          name=\"message\"\r\n          className=\"max-h-32\"\r\n          value={memoryData?.message}\r\n        />\r\n\r\n        <Input\r\n          handleChange={handleChange}\r\n          placeholder=\"Tags\"\r\n          name=\"tags\"\r\n          value={memoryData?.tags}\r\n        />\r\n        {currentId === 0 && (\r\n          <Input handleChange={handleChangeImage} type=\"file\" name=\"image\" />\r\n        )}\r\n\r\n        <Input\r\n          className=\"bg-indigo-800 text-gray-50\"\r\n          type=\"submit\"\r\n          value={currentId === 0 ? \"Add Memory\" : \"Update Memory\"}\r\n        ></Input>\r\n        <Button\r\n          onClick={(e) => clear(e)}\r\n          className=\"bg-red-800\"\r\n          variant=\"destructive\"\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddMemory;\r\n","\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport { X } from \"lucide-react\";\r\n\r\nimport { cn } from \"../../lib/utils\";\r\n\r\nconst Dialog = DialogPrimitive.Root;\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger;\r\n\r\nconst DialogPortal = DialogPrimitive.Portal;\r\n\r\nconst DialogClose = DialogPrimitive.Close;\r\n\r\nconst DialogOverlay = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst DialogContent = React.forwardRef(\r\n  ({ className, children, ...props }, ref) => (\r\n    <DialogPortal>\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        ref={ref}\r\n        className={cn(\r\n          \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        {children}\r\n        <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n          <X className=\"h-4 w-4\" />\r\n          <span className=\"sr-only\">Close</span>\r\n        </DialogPrimitive.Close>\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  )\r\n);\r\nDialogContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst DialogHeader = ({ className, ...props }) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nDialogHeader.displayName = \"DialogHeader\";\r\n\r\nconst DialogFooter = ({ className, ...props }) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nDialogFooter.displayName = \"DialogFooter\";\r\n\r\nconst DialogTitle = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst DialogDescription = React.forwardRef(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogClose,\r\n  DialogTrigger,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n};\r\n","import React, { useState } from \"react\";\r\nimport useMemories from \"../hooks/useMemories\";\r\nimport Loading from \"../components/feedback/Loading\";\r\nimport MemoryCard from \"../components/MemoryCard\";\r\nimport AddMemory from \"../components/forms/AddMemory\";\r\nimport { Dialog, DialogContent, DialogTrigger } from \"../components/ui/Dialog\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FaCirclePlus } from \"react-icons/fa6\";\r\nimport useGetUser from \"../hooks/useGetUser\";\r\n\r\nconst Home = () => {\r\n  const { memories, loading, error } = useMemories();\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const { user, setUser } = useGetUser();\r\n\r\n  return (\r\n    <Loading status={loading} error={error}>\r\n      <div className=\"flex py-8\">\r\n        <div className=\"memory-container flex flex-wrap justify-around lg:justify-evenly gap-y-8 lg:gap-8 h-96 sm:w-full xl:w-3/4 \">\r\n          {memories?.map((memory) => {\r\n            return (\r\n              <MemoryCard\r\n                memory={memory}\r\n                setCurrentId={setCurrentId}\r\n                key={memory._id}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {user && (\r\n          <div\r\n            style={{ height: \"500px\" }}\r\n            className=\"xl:block items-center gap-8 hidden p-4 rounded-md border-solid border-2 border-bg-slate-50\"\r\n          >\r\n            <AddMemory\r\n              currentId={currentId}\r\n              setCurrentId={setCurrentId}\r\n              memories={memories}\r\n            />\r\n          </div>\r\n        )}\r\n        {!user && (\r\n          <h2 className=\"xl:block  hidden \"> Please Login To Add Memories</h2>\r\n        )}\r\n      </div>\r\n\r\n      {user && (\r\n        <div className=\"fixed xl:hidden bottom-10  right-10\">\r\n          <Dialog>\r\n            <DialogTrigger>\r\n              <IconContext.Provider\r\n                value={{ className: \"global-class-name\", size: \"3em\" }}\r\n              >\r\n                <FaCirclePlus />\r\n              </IconContext.Provider>\r\n            </DialogTrigger>\r\n            <DialogContent className=\"w-11/12\">\r\n              <AddMemory\r\n                currentId={currentId}\r\n                setCurrentId={setCurrentId}\r\n                memories={memories}\r\n              />\r\n            </DialogContent>\r\n          </Dialog>\r\n        </div>\r\n      )}\r\n    </Loading>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["GetUser","user","setUser","useState","JSON","parse","localStorage","getItem","token","logOut","useNavigate","clear","window","location","href","useEffect","jwtDecode","exp","Date","getTime","cn","_len","arguments","length","inputs","Array","_key","twMerge","clsx","useMemories","dispatch","useDispatch","promise","actGetMemories","cleanMemories","abort","memories","loading","error","useSelector","state","_ref","status","children","_jsx","_jsxs","Card","React","ref","className","props","displayName","CardHeader","_ref2","CardTitle","_ref3","CardDescription","_ref4","CardContent","_ref5","CardFooter","_ref6","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","asChild","restProps","Comp","Slot","memory","setCurrentId","useGetUser","src","image","alt","title","message","onClick","_id","disabled","creator","MdDelete","actDeleteMemory","Input","type","name","placeholder","handleChange","value","onChange","e","Textarea","currentId","memoryData","setMemoryData","tags","find","target","preventDefault","_Fragment","method","onSubmit","formData","FormData","Object","keys","map","key","append","actAddMemorie","console","log","actUpdateMemory","handleSubmit","enctype","action","files","Dialog","DialogPrimitive","DialogTrigger","DialogPortal","DialogOverlay","DialogContent","X","Home","Loading","MemoryCard","style","height","AddMemory","IconContext","Provider","FaCirclePlus"],"sourceRoot":""}